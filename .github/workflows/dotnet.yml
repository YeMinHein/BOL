name: NuGet Pack & Upload to Google Drive

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-pack-push:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    # - name: Calculate Version (Auto Increment)
    #   id: versioning
    #   shell: pwsh
    #   run: |
    #     $lastTag = git describe --tags --abbrev=0 2>$null

    #     if ([string]::IsNullOrEmpty($lastTag)) {
    #         Write-Output "No tags found. Defaulting to v1.0.0"
    #         $lastTag = "v1.0.0"
    #      }  else {
    #         Write-Output "Last Tag: $lastTag"
    #      }

    #     $versionParts = $lastTag.TrimStart('v').Split('.')
    #     $major = [int]$versionParts[0]
    #     $minor = [int]$versionParts[1]
    #     $patch = [int]$versionParts[2] + 1

    #     $newVersion = "$major.$minor.$patch"
    #     Write-Output "New Version: $newVersion"
    #     echo "nuget_version=$newVersion" >> $env:GITHUB_ENV
    
    # - name: Show NuGet Version
      # run: echo "NuGet Version is ${{ env.nuget_version }}"

    - name: Restore NuGet Packages
      run: nuget restore BOL.sln

    - name: Build Solution
      run: msbuild BOL.sln /p:Configuration=Release /p:Platform="Any CPU"

    - name: Pack NuGet Package
      run: |
        nuget pack BOL.csproj `
          -OutputDirectory ./nupkgs `
          -Properties Configuration=Release `
          -Version $env:nuget_version

    - name: Upload NuGet Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NuGetPackage
        path: ./nupkgs/*.nupkg

    - name: Create & Push Git Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh
      run: |
        git config user.name "YeMinHein"
        git config user.email "yeminhein.tgo@gmail.com"

        git fetch --tags
        $newTag = "v$env:nuget_version"

        if (git tag -l $newTag) {
            Write-Output "Tag $newTag already exists. Skipping tag creation."
        } else {
            Write-Output "Creating and pushing tag $newTag"
            git tag $newTag
            git push origin $newTag
        }
